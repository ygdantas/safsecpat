% ./dlv examples/headlamp/architecture-headlamp-not-ctl-saf-1.dlv safety/safety.dlv utils/utils.dlv -filter=tolby -filter=ntol -filter=safMon -filter=watchDog -filter=tmr

% === Architecture ===
% Components
%% cell -> Cellular
%% bt -> Bluetooth
%% navig -> Navigation ECU
%% gw -> Gateway ECU
%% obdConn -> OBd-II connector
%% cam -> Camera ECU
%% bodyCtrl -> Body Control ECU
%% pwrSwchAct -> Power Switch Actuator 
%% hdLmpSwch -> Headlamp Switch
%% hdLmpSystem -> Headlamp System
cp(cell). 
cp(bt).
cp(navig).
cp(gw). 
cp(obdConn).
cp(cam).
cp(bodyCtrl).
cp(pwrSwchAct).
cp(hdlmpSwch).
cp(hdlmpSystem).


% Subcomponents
%% hdLmpSwch is a subcomponent of hdlmpSystem
subcp(hdlmpSwch, hdlmpSystem).
%% bodyCtrl is a subcomponent of hdlmpSystem
subcp(bodyCtrl, hdlmpSystem).
%% cam is a subcomponent of hdlmpSystem
subcp(cam, hdlmpSystem).
%% pwrSwchAct is a subcomponent of hdlmpSystem
subcp(pwrSwchAct, hdlmpSystem).


% Logical Channels
%% cell -> navig 
ch(cellNavig, cell, navig).
%% bt -> navig
ch(btNavig,bt,navig).
%% navig -> gw
ch(navigGW,navig,gw).
%% gw -> pwrSwchAct
ch(gwPwrSwch,gw,pwrSwchAct).
%% cam, pwrSwchAct
ch(camPwrSwch,cam,pwrSwchAct).

ch(obdGw,obdConn,gw).

ch(bodyCPwrSwch, bodyCtrl, pwrSwchAct).

ch(gwbodyCtrl, gw, bodyCtrl).

ch(hdSwchbdCtrl,hdlmpSwch, bodyCtrl) .

ch(gwhlSys,gw,hdlmpSystem).

% physical components
  % - ECUs
  % - comm mediums
can(can1).
dep(navigGW,can1).
can(can2).
dep(gwPwrSwch,can2).
dep(bodyCPwrSwch,can2).
dep(gwbodyCtrl,can2).
can(can3).
dep(obdGw,can3).

dep(gwhlSys,can2).

ecu(ecuNavig).
ecu(ecuGW).
ecu(ecuBC).
%ecu(ecuCAM).
dep(navig,ecuNavig).
dep(gw,ecuGW).
%dep(cam,ecuCAM).
%dep(bodyCtrl,ecuBC).


wireless(wl).
dep(cellNavig,wl).
dep(btNavig,wl).

hw(pwrSwchAct).
hw(cam) .
hw(hdlmpSystem).


%%%% Identified hazards %%%%
hz([hzHLSys,hdlmpSystem,cat]).
fl([flBdCl,bodyCtrl,err,cat]) .
%fl([flCam,cam,err,cat]) .
fl([flhls,hdlmpSystem,loss,cat]) .
fl([flcan,can2,err,cat]).

fl2Hz(flBdCl,hzHLSys).
%fl2Hz(flCam,hzHLSys) .
fl2Hz(flCan,hzHLSys) .
fl2Hz(flhls,hzHLSys) .

tol([flcan,can2,err,cat]).
tolby([flcan,can2,err,cat],replacement).


%%%% SECURITY %%%
%% public(CP), where CP is public component that may be accessible by an attacker
public(cell).
public(bt).
public(obdConn).

%% Information flow
if(if2,[cellNavig,navigGW,gwbodyCtrl]).
before(cellNavig,navigGW,if2).
before(navigGW,gwbodyCtrl,if2).


if(if4,[btNavig,navigGW,gwbodyCtrl]).  
before(btNavig,navigGW,if4).
before(navigGW,gwbodyCtrl,if4).

if(if6,[obdGw,gwbodyCtrl]).  
before(obdGw,gwbodyCtrl,if6).

if(if7,[hdSwchbdCtrl, bodyCPwrSwch]).
before(hdSwchbdCtrl,bodyCPwrSwch,if7).

if(if8,[camPwrSwch]).

if(if9,[cellNavig,navigGW,gwhlSys]).
before(cellNavig,navigGW,if9).
before(navigGW,gwhlSys,if9).

if(if10,[btNavig,navigGW,gwhlSys]).
before(btNavig,navigGW,if10).
before(navigGW,gwhlSys,if10).


if(if11,[obdGw,gwhlSys]).
before(obdGw,gwhlSys,if11).


%% Uncomment for exploration
explore(1,safMon) .
explore(1,hdr).
explore(1,watchDog) .
explore(1,nProg) .
explore(1,tmr) .
explore(1,prtSglCh) .
:- nctl([Z,V,P]).


% ./dlv examples/battery/architecture-battery-not-ctl-saf-2.dlv  safety/safety.dlv utils/utils.dlv tradeoff/tradeoff.dlv -filter=conflSec2Saf -filter=fl2Hz -filter=firewall

% === Architecture ===
% Components
% bms -> Battery Management System
% bat -> Battery
% ci -> Charging interface
% fw -> firewall
cp(bms).
cp(bat).
cp(ci) .
cp(bm).
subcp(bm,bms).
%cp(fw).

% Logical Channels 
ch(ch1,bat,bm).
%ch(ch2,bms,ci).
ch(ch3,ci,bat).
%dep(ch20,can).
%ch(ch20,bms,fw).
%ch(ch21,fw,ci).


% physical components
  % - ECUs
  % - comm mediums
can(can).
%dep(ch2,can).
ecu(ecu).
%dep(bms,ecu).
hw(bat).
hw(ci).

%%% Identified hazards %%%
hz([hzBat,bat,cat]) .
fl([flBm,bm,err,cat]).
fl([flCan,can,err,cat]).

fl2Hz(flBm,hzBat) .
fl2Hz(flCan,hzBat) .

tol([flCan,can,err,cat]).
tolby([flCan,can,err,cat],replacement).


%%% PATTERN - Safety Monitor
cp(safMon).
subcp(safMon,bm).
ch(min,bat,safMon).
ch(mout,bm,safMon).
ch(fs,safMon,bm).

safMon(safMon,bm,[ch1],[ch2],fs,[min],[mout]).


%%% Pattern: Firewall
cp(firewall).
ch(ch20,bm,firewall).
ch(ch21,firewall,ci).
dep(ch20,can) .
firewall(firewall,can,ci,[ch20],[ch21]) .


%%%% SECURITY %%%
%% public(CP), where CP is public component that may be accessible by an attacker
public(ci).

%% Information flow

if(if1,[ch1,min,mout,fs,ch20,ch21,ch3]).
before(ch1,min,if1).
before(min,mout,if1).
before(mout,fs,if1).
before(fs,ch20,if1).
before(ch20,ch21,if1).
before(ch21,ch3,if1).

%% Uncomment for exploration
%explore(1,safMon) .
explore(1,hdr).
%:- nctl([Z,V,P]).
% explore(1,tmr) .
% explore(1,watchDog) .
% explore(1,nProg) .

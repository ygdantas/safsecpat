%% ./dlv examples/battery/architecture-battery-not-mit-sec-2.dlv  security/security.dlv utils/utils.dlv -nofinitecheck tradeoff/tradeoff.dlv -filter=conflSaf2Sec -filter=threat

% === Architecture ===
% Components
% bms -> Battery Management System
% bat -> Battery
% ci -> Charging interface
% fw -> firewall
cp(bms).
cp(bat).
cp(ci) .
cp(bm).
subcp(bm,bms).

% Logical Channels 
ch(ch1,bat,bm).
%ch(ch2,bms,ci).
%ch(ch3,ci,bat).
%dep(ch20,can).
%ch(ch20,bms,fw).
%ch(ch21,fw,ci).


% physical components
  % - ECUs
  % - comm mediums
can(can).
%dep(ch2,can).
ecu(ecu).
%dep(bms,ecu).
hw(bat).
hw(ci).

%%% Identified hazards %%%
hz([hzBat,bat,cat]) .
fl([flBm,bm,err,cat]).
fl([flCan,can,err,cat]).

fl2Hz(flBm,hzBat) .
fl2Hz(flCan,hzBat) .

tol([flCan,can,err,cat]).
tolby([flCan,can,err,cat],replacement).

%%% PATTERN - Safety Monitor
cp(safMon).
subcp(safMon,bm).
ch(min,bat,safMon).
ch(mout,bm,safMon).
ch(fs,safMon,bm).

safMon(safMon,bm,[ch1],[ch2],fs,[min],[mout]).

%%% PATTERN: HDR
cp(voterdm).
ch(moon1,bm,voterdm).
ch(moon2,ci,voterdm).
ch(vtoutdm,voterdm,bat).
hdr(dmoon,bm,ci,moon1,moon2,voterdm,vtoutdm,bat).

%%% Pattern: Firewall
cp(firewall).
ch(ch20,bm,firewall).
ch(ch21,firewall,ci).
dep(ch20,can) .
firewall(firewall,can,ci,[ch20],[ch21]) .


%%%% SECURITY %%%
%% public(CP), where CP is public component that may be accessible by an attacker
public(ci).

%% Information flow

if(if1,[ch1,min,mout,fs,ch20,moon1,ch21,moon2,vtoutdm]).
before(ch1,min,if1).
before(min,mout,if1).
before(mout,fs,if1).
before(fs,ch20,if1).
before(ch20,moon1,if1).
before(moon1,ch21,if1).
before(ch21,moon2,if1).
before(moon2,vtoutdm,if1).

if(if2,[ch1,min,mout,fs,moon1,ch20,ch21,moon2,vtoutdm]).
before(ch1,min,if2).
before(min,mout,if2).
before(mout,fs,if2).
before(fs,moon1,if2).
before(moon1,ch20,if2).
before(ch20,ch21,if2).
before(ch21,moon2,if2).
before(moon2,vtoutdm,if2).


%% Uncomment for exploration
explore(1,firewall) .
explore(1,secMonCH) .
explore(1,secMonCP) .
%:- nmit([Z,V,P,T]) .

